{
    "name": "df_transform_hospital_admissions_data",
    "properties": {
        "type": "MappingDataFlow",
        "typeProperties": {
            "sources": [
                {
                    "dataset": {
                        "referenceName": "dl_raw_hospital_admissions_data",
                        "type": "DatasetReference"
                    },
                    "name": "SourceHospilatAdmissions"
                },
                {
                    "dataset": {
                        "referenceName": "ds_country_lookup",
                        "type": "DatasetReference"
                    },
                    "name": "CountrylookupSource"
                },
                {
                    "dataset": {
                        "referenceName": "df_raw_dim_date",
                        "type": "DatasetReference"
                    },
                    "name": "DimDateSource"
                }
            ],
            "sinks": [
                {
                    "dataset": {
                        "referenceName": "ds_processed_hospital_admissions_Weekly",
                        "type": "DatasetReference"
                    },
                    "name": "WeeklySink"
                },
                {
                    "dataset": {
                        "referenceName": "ds_processed_hospital_admissions_daily",
                        "type": "DatasetReference"
                    },
                    "name": "DailySink"
                }
            ],
            "transformations": [
                {
                    "name": "SelectRequiredFields"
                },
                {
                    "name": "LookupCountry"
                },
                {
                    "name": "SelectRequiredFields2"
                },
                {
                    "name": "SplitDailyFromWeekly"
                },
                {
                    "name": "AggDimDate"
                },
                {
                    "name": "JoinwithDate"
                },
                {
                    "name": "PivotWeekly"
                },
                {
                    "name": "PivotDaily"
                },
                {
                    "name": "SortWeekly"
                },
                {
                    "name": "SortDaily"
                },
                {
                    "name": "SelectWeekly"
                },
                {
                    "name": "SelectDaily"
                }
            ],
            "scriptLines": [
                "source(output(",
                "          country as string,",
                "          indicator as string,",
                "          date as date,",
                "          year_week as string,",
                "          value as integer,",
                "          source as string,",
                "          url as string",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     ignoreNoFilesFound: false) ~> SourceHospilatAdmissions",
                "source(output(",
                "          country as string,",
                "          country_code_2_digit as string,",
                "          country_code_3_digit as string,",
                "          continent as string,",
                "          population as string",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     ignoreNoFilesFound: false) ~> CountrylookupSource",
                "source(output(",
                "          date_key as string,",
                "          date as string,",
                "          year as string,",
                "          month as string,",
                "          day as string,",
                "          day_name as string,",
                "          day_of_year as string,",
                "          week_of_month as string,",
                "          week_of_year as string,",
                "          month_name as string,",
                "          year_month as string,",
                "          year_week as string",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     ignoreNoFilesFound: false) ~> DimDateSource",
                "SourceHospilatAdmissions select(mapColumn(",
                "          country,",
                "          indicator,",
                "          reported_date = date,",
                "          reported_year_week = year_week,",
                "          value,",
                "          source",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> SelectRequiredFields",
                "SelectRequiredFields, CountrylookupSource lookup(SelectRequiredFields@country == CountrylookupSource@country,",
                "     multiple: false,",
                "     pickup: 'any',",
                "     broadcast: 'auto')~> LookupCountry",
                "LookupCountry select(mapColumn(",
                "          country = SelectRequiredFields@country,",
                "          indicator,",
                "          reported_date,",
                "          reported_year_week,",
                "          value,",
                "          source,",
                "          country = CountrylookupSource@country,",
                "          country_code_2_digit,",
                "          country_code_3_digit,",
                "          population",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> SelectRequiredFields2",
                "SelectRequiredFields2 split(indicator == \"Weekly new hospital admissions per 100k\" || indicator == \"Weekly new ICU admissions per 100k\",",
                "     disjoint: false) ~> SplitDailyFromWeekly@(Weekly, Daily)",
                "DimDateSource aggregate(groupBy(ecdc_year_week = year+\"-W\"+lpad(week_of_year,2,'0')),",
                "     week_start_date = min(date),",
                "          week_end_date = max(date)) ~> AggDimDate",
                "SplitDailyFromWeekly@Weekly, AggDimDate join(reported_year_week == ecdc_year_week,",
                "     joinType:'inner',",
                "     matchType:'exact',",
                "     ignoreSpaces: false,",
                "     broadcast: 'auto')~> JoinwithDate",
                "JoinwithDate pivot(groupBy(country,",
                "          reported_year_week,",
                "          week_start_date,",
                "          week_end_date,",
                "          source,",
                "          country_code_2_digit,",
                "          country_code_3_digit),",
                "     pivotBy(indicator, ['Weekly new ICU admissions per 100k', 'Weekly new hospital admissions per 100k']),",
                "     count = sum(value),",
                "     columnNaming: '$V_$N',",
                "     lateral: true) ~> PivotWeekly",
                "SplitDailyFromWeekly@Daily pivot(groupBy(country,",
                "          country_code_2_digit,",
                "          country_code_3_digit,",
                "          source,",
                "          reported_date),",
                "     pivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),",
                "     count = sum(value),",
                "     columnNaming: '$V_$N',",
                "     lateral: true) ~> PivotDaily",
                "PivotWeekly sort(desc(reported_year_week, true),",
                "     asc(country, true)) ~> SortWeekly",
                "PivotDaily sort(desc(reported_date, true),",
                "     asc(country, true)) ~> SortDaily",
                "SortWeekly select(mapColumn(",
                "          country,",
                "          reported_year_week,",
                "          week_start_date,",
                "          week_end_date,",
                "          source,",
                "          country_code_2_digit,",
                "          country_code_3_digit,",
                "          New_ICU_Occupancy_Count = {Weekly new ICU admissions per 100k_count},",
                "          New_Hospital_Occupancy_count = {Weekly new hospital admissions per 100k_count}",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> SelectWeekly",
                "SortDaily select(mapColumn(",
                "          country,",
                "          country_code_2_digit,",
                "          country_code_3_digit,",
                "          source,",
                "          reported_date,",
                "          hospital_occupancy_count = {Daily hospital occupancy_count},",
                "          icu_occupancy_count = {Daily ICU occupancy_count}",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> SelectDaily",
                "SelectWeekly sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     umask: 0022,",
                "     preCommands: [],",
                "     postCommands: [],",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> WeeklySink",
                "SelectDaily sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     umask: 0022,",
                "     preCommands: [],",
                "     postCommands: [],",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> DailySink"
            ]
        }
    }
}